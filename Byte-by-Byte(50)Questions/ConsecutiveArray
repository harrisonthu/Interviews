

// This question is from Page 8 from 50 Interview Questions (Byte by Byte)
// Question(Q5) :   Given unsorted array, find the length of the longest sequence
//                  of consecutive numbers in the array
// e.g.
//              consecutive([4, 2, 1, 6, 5])    = 3, [4, 5, 6]
//              consecutive([5, 5, 3, 1])       = 1, [1], [3], or [5] 
// Solution:  https://www.byte-by-byte.com/consecutivearray/
//

import java.util.HashSet;

public class ConsecutiveArray {

    // Function to return the maxinum consecutive sequence number in array
    public static int ConsecutiveArray(int[] arr) {
        HashSet<Integer> hs = new HashSet<>();
        for (int i : arr) {
            // Add all values from arr to Hashset so it removes duplicates
            hs.add(i);
        }

        int max = 0; // return Max consecutive sequence length
        
        for (int i : hs) {      // Loop in the hashset (no duplicates)
            if (hs.contains(i - 1)) { // TEST: i-1 NOT index
                continue;       // if found value less than current value in Hashset, ignore
            } else {
                int length = 0;
                while (hs.contains(i++)) { // Found value larger current value in Hashset,keep looking higher values
                    length++;
                }
                max = Math.max(max, length);
            }

        }
        System.out.println(hs);
        return max;
    }

    public static void main(String[] args) {
        int[] arr = {4, 2, 1, 6, 5, 5, 5, 5, 7};
        System.out.println(ConsecutiveArray(arr));

    }
}

