
// This question is from Page 10 from 50 Interview Questions (Byte by Byte)
//  Merge Arrays  
// Question(Q10) :  Given 2 sorted arrays, A and B, where A is long enough to hold the
//                  contents of A and B, write a function to copy the contents of B into A without
//                  using any buffer or additional memory
// E.g
//     A = {1,3,5,0,0,0} 
//     B = {2,4,6}  
//     mergeArrays(A, B) 
//     A = {1,2,3,4,5,6} 
// 
// Solution:  https://www.byte-by-byte.com/mergearrays/ 
//

public class mergearrays {

    // A = Array that is long enough to hold all values from existing A, and values from B
    // B = Array to add to Array A
    // int a_size = total size the A array (index of the size of the values in A)
    // int b_index = total size of the B array (index of the size of the values in B)
    //      A = {1,3,5,0,0,0}
    //      B = {2,4,6}
    //      mergeArrays(A, B)
    //      A = {1,2,3,4,5,6}
    public static void mergearrays(int[] A, int[] B, int a_size, int b_size) throws Exception {
        try {

            int A_n = A.length - 1;
            int B_m = B.length - 1;
            int a_index = a_size;  // Declare here so it will not retrieve from the parameter
            int b_index = b_size;  // Declare here so it will not retrieve from the parameter

            int mergeindex = A.length - 1;
            // Base case:
            if (a_index + b_index > A.length - 1) {
                throw new Exception();
            }

            while (a_size >= 0 && b_index >= 0) {
                if (A[a_size] > B[b_index]) {
                    A[mergeindex] = A[a_size];
                    a_size--;
                } else {
                    A[mergeindex] = B[b_index];

                    b_index--;
                }
                mergeindex--;
            }
            // If there are some values left in B array
            // e.g   a = [3,,5,7,0,0,0]
            //       b = [1,2,4,6]
            while (b_index >= 0) {
                A[mergeindex] = B[b_index];
                mergeindex--;
                b_index--;
            }

        } catch (Exception e) {
            return;
        } finally {
            return;
        }
    }

    public static void main(String args[]) throws Exception {
        int[] A = {3, 5, 7, 0, 0, 0};
        int[] B = {1, 2, 4, 6};
        System.out.println("int A = " + Arrays.toString(A));
        mergearrays(A, B, 2, B.length - 1);
        System.out.println("after int A = " + Arrays.toString(A));


    }

}
