
import java.util.Arrays;
import java.util.HashMap;


// This question is from Page 11 from 50 Interview Questions (Byte by Byte)
// Find Zero Sum Subarray 
// Question(Q11) :  Given an array 
// write a functiontoﬁndanysubarraythatsumstozero, if one exists. 
// Solution:  https://www.byte-by-byte.com/zerosum/
//

public class zerosum {



    public static int[] zerosum(int[] array) {
        //Base case
        if (array.length <= 0) {
            return null;
        }

        // Hashmap <current_sum , index>
        HashMap<Integer, Integer> myhm = new HashMap<Integer, Integer>();
        int totalsum = 0;
        for (int i = 0; i <= array.length; i++) {
            Integer currentsum = myhm.get(totalsum); // Set the first key value =0 in hashmap
            if (currentsum == null && i == array.length) { // checking if the last element is not out of bound
                return null;
            } else if (currentsum == null) {
                myhm.put(totalsum, i);
                totalsum += array[i];
            } else {

                return Arrays.copyOfRange(array, totalsum, i);  // Arrays.copyOfRange (array, index_inclusive, index_exclusive)
            }
        }
        return null;
    }

    public static void main(String args[]) {
        int[] myarr = {1, 2, -5, 1, 2, -1};
        System.out.println(Arrays.toString(zerosum(myarr)));

    }

}
